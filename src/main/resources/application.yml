server:
  port: 80

spring:
  application:
    name: @name@
    version: @version@
    description: A service to import and suggest similar content
  security:
    client-id: asset-management

  elasticsearch:
    uris: ${ELASTICSEARCH_URL:http://localhost:9200}
    username: ${ELASTICSEARCH_USERNAME:username}
    password: ${ELASTICSEARCH_PASSWORD:password}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:dreipc}
    password: ${RABBITMQ_PASSWORD:password}
    exchange: assets
    template:
      exchange: assets
  redis:
    cluster:
      nodes: ${REDIS_HOST:localhost}:${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:password}
    namespace: ${REDIS_NAMESPACE:sess}

### Kubernetes Health ###
management:
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
    prometheus:
      enabled: true
  endpoints:
    enabled-by-default: false
    web:
      cors:
        allowed-origins: "*"
        allowed-methods: GET, POST
      base-path: /manage
      path-mapping:
        prometheus: metrics
      exposure:
        include: [ "health", "prometheus" ]


dgs:
  graphql:
    schema-locations:
      - classpath*:schema/common/*.graphql*
